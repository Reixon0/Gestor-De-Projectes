<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_open_file' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:openAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gestor_projectes_backend_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\FormulariController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back-end/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'tasca_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\TascaController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back-end/tasca/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'tasca_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\TascaController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/back-end/tasca',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'tasca_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\TascaController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back-end/tasca/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'tasca_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\TascaController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/back-end/tasca',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'tasca_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\TascaController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/back-end/tasca',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'subtasca_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\SubtascaController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back-end/subtasca/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'subtasca_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\SubtascaController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/back-end/subtasca',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'subtasca_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\SubtascaController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back-end/subtasca/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'subtasca_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\SubtascaController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/back-end/subtasca',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'subtasca_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\SubtascaController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/back-end/subtasca',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'estat_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\EstatController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back-end/estat/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'estat_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\EstatController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/back-end/estat',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'estat_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\EstatController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back-end/estat/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'estat_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\EstatController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/back-end/estat',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'estat_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\EstatController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/back-end/estat',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'usuaris_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\UsuarisController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back-end/usuaris/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'usuaris_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\UsuarisController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/back-end/usuaris',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'usuaris_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\UsuarisController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back-end/usuaris/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'usuaris_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\UsuarisController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/back-end/usuaris',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'usuaris_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\UsuarisController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/back-end/usuaris',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gestor_projectes_backend_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\FormulariController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back-end/logout1',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gestor_projectes_backend_registrar_usuario' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\CrudController::creaUsuariAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back-end/reg',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gestor_projectes_backend_crearSubtasca' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\CrudController::creaSubtascaAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back-end/subtasca',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gestor_projectes_backend_crearTasca' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\CrudController::creaTascaAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back-end/tasca',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gestor_projectes_backend_buscaTasques' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\CrudController::buscaTasquesAction',    'id' => 0,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back-end/home2',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'GestorProjectes\\BackendBundle\\Controller\\UsuarisController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back-end/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'logout' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back-end/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'vallbonaweb_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Vallbona\\webBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/public-web/home',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'vallbonaweb_articles' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Vallbona\\webBundle\\Controller\\DefaultController::articlesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/public-web/articles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'vallbonaweb_article' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Vallbona\\webBundle\\Controller\\DefaultController::articleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/public-web/article',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
